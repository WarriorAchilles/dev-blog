@import 'tailwindcss';
@plugin "@tailwindcss/forms";
@plugin '@tailwindcss/typography';
@source '../node_modules/pliny';
@custom-variant dark (&:where(.dark, .dark *));

/* Core theme configuration */
@theme {
    /* Font families */
    --font-sans:
        var(--font-space-grotesk), ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
        'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

    /* Colors */

    /* Midnight Kyoto - Dark Theme */
    --color-background: #121212;
    --color-surface: #1f1f1f;
    --color-border: #2a2a2a;
    --color-textHeading: #e7dfd1; /* Brighter beige for emphasis */
    --color-textBody: #cfc5b8; /* Soft rice beige */
    --color-textBodyHover: #e0d6c8;
    --color-matcha: #90a955;
    --color-matchaHover: #a4bf69;
    --color-koi: #ce5a57;
    --color-koiHover: #e46f68;
    --color-cedar: #6c584c;
    --color-cedarHover: #837063;
    --color-sky: #6ab0f3;
    --color-skyHover: #82c0fa;

    /* Midnight Kyoto - Light Theme (optional) */
    --color-background-light: #fdfcf8;
    --color-surface-light: #f9f6f1;
    --color-textHeading-light: #1c1c1c;
    --color-textBody-light: #3c3c3c;
    --color-textBodyHover-light: #1c1c1c;
    --color-matcha-light: #90a955;
    --color-koi-light: #ce5a57;
    --color-cedar-light: #6c584c;
    --color-sky-light: #6ab0f3;
    --color-border-light: #dcdcdc;

    /* Line heights */
    --line-height-11: 2.75rem;
    --line-height-12: 3rem;
    --line-height-13: 3.25rem;
    --line-height-14: 3.5rem;

    /* Z-index values */
    --z-60: 60;
    --z-70: 70;
    --z-80: 80;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-border, currentColor);
    }

    a,
    button {
        outline-color: var(--color-border);
    }

    a:focus-visible,
    button:focus-visible {
        outline: 2px solid;
        border-radius: var(--radius-sm);
        outline-color: var(--color-primary-500);
    }
}

@layer utilities {
    .prose {
        & a {
            color: var(--color-koi);
            &:hover {
                color: var(--color-koiHover);
            }
            & code {
                /* color: var(--color-primary-400); */
            }
        }
        & :where(h1, h2) {
            font-weight: 700;
            letter-spacing: var(--tracking-tight);
        }
        & h3 {
            font-weight: 600;
        }
        & :where(code):not(pre code) {
            /* color: var(--color-indigo-500); */
        }
        & :where(h1, h2, h3, h4, h5, h6) {
            color: var(--color-textHeading-light);
        }

        @variant dark {
            & a {
                color: var(--color-matcha);
                &:hover {
                    color: var(--color-matchaHover);
                }
                & code {
                    /* color: var(--color-primary-400); */
                }
            }
            & :where(h1, h2, h3, h4, h5, h6) {
                color: var(--color-textHeading);
            }
        }
    }
}

.task-list-item::before {
    @apply hidden;
}

.task-list-item {
    @apply list-none;
}

.footnotes {
    @apply mt-12 border-t border-gray-200 pt-8 dark:border-gray-700;
}

.data-footnote-backref {
    @apply no-underline;
}

.csl-entry {
    @apply my-5;
}

.no-scrollbar::-webkit-scrollbar {
    display: none;
}

.no-scrollbar {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
}

/* https://stackoverflow.com/questions/61083813/how-to-avoid-internal-autofill-selected-style-to-be-applied */
input:-webkit-autofill,
input:-webkit-autofill:focus {
    transition:
        background-color 600000s 0s,
        color 600000s 0s;
}

.katex-display {
    overflow: auto hidden;
}

.content-header-link {
    opacity: 0;
    margin-left: -24px;
    padding-right: 4px;
}

.content-header:hover .content-header-link,
.content-header-link:hover {
    opacity: 1;
}

.linkicon {
    display: inline-block;
    vertical-align: middle;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
    @keyframes typewriter {
        from {
            width: 0;
        }
        to {
            width: 100%;
        }
    }

    @keyframes blink {
        50% {
            border-color: transparent;
        }
    }

    @keyframes shine {
        0% {
            background-position: 100%;
        }
        100% {
            background-position: -100%;
        }
    }

    .typewriter {
        overflow: hidden;
        border-right: 2px solid currentColor;
        white-space: nowrap;
        animation:
            typewriter 3s steps(30, end) forwards,
            blink 0.75s step-end infinite;
    }

    .animate-shine {
        animation: shine 5s linear infinite;
    }

    .glass3d {
        --filter-glass3d: blur(10px) brightness(0.8) saturate(1.9);
        --color-glass3d: hsl(169 12% 10% / 0.2);
        --noise-glass3d: url('https://www.transparenttextures.com/patterns/fabric-1-light.png');

        position: relative;
        z-index: 4;
        box-shadow:
            0 0 0.75px hsl(205 20% 10% / 0.2),
            0.7px 0.8px 1.2px -0.4px hsl(205 20% 10% / 0.1),
            1.3px 1.5px 2.2px -0.8px hsl(205 20% 10% / 0.1),
            2.3px 2.6px 3.9px -1.2px hsl(205 20% 10% / 0.1),
            3.9px 4.4px 6.6px -1.7px hsl(205 20% 10% / 0.1),
            6.5px 7.2px 10.9px -2.1px hsl(205 20% 10% / 0.1),
            8px 9px 14px -2.5px hsl(205 20% 10% / 0.2);
    }

    .glass3d::before {
        content: '';
        position: absolute;
        inset: 0;
        pointer-events: none;
        border-radius: inherit;
        overflow: hidden;
        z-index: 3;

        -webkit-backdrop-filter: var(--filter-glass3d);
        backdrop-filter: var(--filter-glass3d);
        background-color: var(--color-glass3d);
        background-image: var(--noise-glass3d);
        background-size: 100px;
        background-repeat: repeat;
    }

    .glass3d::after {
        content: '';
        position: absolute;
        inset: 0;
        pointer-events: none;
        border-radius: inherit;
        overflow: hidden;
        z-index: 5;

        box-shadow:
            inset 2px 2px 1px -3px hsl(205 20% 90% / 0.8),
            inset 4px 4px 2px -6px hsl(205 20% 90% / 0.3),
            inset 1.5px 1.5px 1.5px -0.75px hsl(205 20% 90% / 0.15),
            inset 1.5px 1.5px 0.25px hsl(205 20% 90% / 0.03),
            inset 0 0 0.25px 0.5px hsl(205 20% 90% / 0.03);
    }

    .glass3d > * {
        position: relative;
        z-index: 6;
    }

    .sticky {
        position: sticky !important;
    }
}
